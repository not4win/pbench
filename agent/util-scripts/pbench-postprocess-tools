#!/bin/bash
# -*- mode: shell-script; indent-tabs-mode: t; sh-basic-offset: 8; sh-indentation: 8; sh-indent-for-case-alt: + -*-

script_path="$(dirname ${0})"
script_name="$(basename ${0})"
pbench_bin="$(realpath -e ${script_path}/..)"
_suffix=${script_name#pbench-}
action=${_suffix%%-*}

# source the base script
. "${pbench_bin}"/base

if [[ "${action}" != "start" && "${action}" != "stop" && "${action}" != "postprocess" && "${action}" != "kill" ]]; then
	error_log "[${script_name}] action \"${action}\" is not supported"
	exit 1
fi

# This script will $action all tools that belong to a specific group. This is
# typically called by a benchmark script when some activity needs to be
# monitored.

# Defaults
group=""
iteration=""
sample=""

# Process options and arguments
opts=$(getopt -q -o g:i:s: --longoptions "group:,iteration:,sample:" -n "getopt.sh" -- "${@}")
if [[ ${?} -ne 0 ]]; then
	printf -- "\n${script_name}: you specified an invalid option\n\n"
	printf -- "The following are required:\n\n"
	printf -- "\t-g str --group=str,     str = a tool group used in a benchmark\n"
	printf -- "\t-i str --iteration=str, str = a string representing the\n"
	printf -- "\t                              iteration for which the data was\n"
	printf -- "\t                              collected\n"
	printf -- "\t-s str --sample=str,    str = a string identifying the sample for\n"
	printf -- "\t                              which the tools will be run\n"
	exit 1
fi
eval set -- "${opts}"
while true; do
	case "${1}" in
	-g|--group)
		shift
		if [[ -n "${1}" ]]; then
			group="${1}"
			shift
		fi
		;;
	-i|--iteration)
		shift
		if [[ -n "${1}" ]]; then
			iteration="${1}"
			shift
		fi
		;;
	-s|--sample)
		shift
		if [[ -n "${1}" ]]; then
			sample="${1}"
			shift
		fi
		;;
	--)
		shift
		break
		;;
	esac
done

if [[ -z "${group}" ]]; then
	printf -- "ERROR: required tool group parameter missing.\n" >&2
	exit 1
fi
if [[ -z "${iteration}" ]]; then
	printf -- "ERROR: required iteration number missing.\n" >&2
	exit 1
fi
if [[ -z "${sample}" ]]; then
	printf -- "ERROR: required sample identifier missing.\n" >&2
	exit 1
fi

# This tool group's directory which stores the list of tools and their
# options, etc.
tool_group_dir="$(verify_tool_group "${group}")"
if [[ ${?} -ne 0 || -z "${tool_group_dir}" ]]; then
	exit 1
fi

if [[ "${action}" == "kill" ]]; then
	_msg="pbench-kill-tools is a no-op and has been deprecated: pbench-stop-tools ensures tools are properly cleaned up."
	printf -- "%s\n" "${_msg}"
	log "${_msg}"
	exit 0
fi

# Tell the tool meister to take the requested action.
pbench-tool-meister-client "${group}" "${iteration}" "${sample}" "${action}"
exit ${?}
